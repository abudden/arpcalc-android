apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

buildscript {
    ext.kotlin_version = '1.1.1'
    ext.anko_version = '0.10.0-beta-2'

    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    defaultConfig {
        applicationId "uk.co.cgtk.karpcalc"
        minSdkVersion 25
        targetSdkVersion 25
        versionCode 13
        versionName "1.3"
        jackOptions {
			enabled true
		}
    }
    
    lintOptions {
		abortOnError false
    }

    compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
		release {
			keyAlias keystoreProperties["keyAlias"]
			keyPassword keystoreProperties["keyPassword"]
			storeFile file(keystoreProperties["storeFile"])
			storePassword keystoreProperties["storePassword"]
		}
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
		main.manifest.srcFile '../src/androidUi/AndroidManifest.xml'
		main.res.srcDirs = ['../src/androidUi/res']
        main.java.srcDirs += '../src/main'
        main.java.srcDirs += '../src/androidUi/kotlin'
        test.java.srcDirs += '../src/test'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.anko:anko-sdk25:$anko_version"
    compile "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
    compile "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
    compile 'com.github.kittinunf.fuel:fuel-android:1.9.0'
	compile 'ch.obermuhlner:big-math:1.2.1'

    // Required for local unit tests (JUnit 4 framework)
    testCompile 'junit:junit:4.12'

    // Required for instrumented tests
    androidTestCompile 'com.android.support:support-annotations:24.0.0'
    androidTestCompile 'com.android.support.test:runner:0.5'
}

task versionInfo(type:Exec){
	commandLine 'python ../changeset.py'.split()
}

tasks.withType(Test) {
	testLogging {
		showStandardStreams = true
		exceptionFormat = 'full'
	}
}

gradle.projectsEvaluated {
	compileDebugKotlin.dependsOn(versionInfo)
	compileReleaseKotlin.dependsOn(versionInfo)
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
